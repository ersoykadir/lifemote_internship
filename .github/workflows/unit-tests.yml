# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Server Unit Tests

on: [push, pull_request]

# permissions:
#   contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GOOGLE_CLIENT_ID: ${{secrets.GOOGLE_CLIENT_ID}}
      GOOGLE_CLIENT_SECRET: ${{secrets.GOOGLE_CLIENT_SECRET}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      HOST: 0.0.0.0
      PORT: 3000
    steps:
    - uses: actions/checkout@v3
    - name: Build tester docker
      run: docker build -f ./server/Dockerfile_test -t lifemote_internship-unittest ./server
    - name: Run the tests docker
      run: docker run --name lifemote_internship-unittest-1 -e HOST=server -e PORT=3000 -e GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID -e GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET -e SECRET_KEY=$SECRET_KEY lifemote_internship-unittest:latest
    - name: Unit test results
      run: echo $(docker logs lifemote_internship-unittest-1)
    - name: Check the exit status
      run: |
        export container_id=$(docker inspect --format="{{.Id}}" lifemote_internship-unittest-1)
        export result_case=$(docker inspect $(echo $container_id) --format={{.State.ExitCode}})
        if [[ $result_case == 0 ]]; then exit 0; else exit 1; fi
